@use '../../styles/variables';

@use "sass:map";

.exchangeRates {
  //   position: relative;
  margin-top: 10px;
  margin-bottom: 50px;
  padding: 0 10px;
  margin-left: 10px;
  margin-right: 10px;
  overflow-x: auto;
  &-dataLoader {
    position: fixed;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    opacity: 0;
    background: rgba(0, 0, 0, 0.2);
    transition: all ease-out 300ms;
    z-index: -1;
    svg {
      width: 80px;
      height: 80px;
      color: map.get(variables.$white, 'pure');
      animation: spin ease 500ms infinite;
    }
    &.active {
      opacity: 1;
      z-index: 99999;
    }
  }
  &-selectedValues__container {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: flex-start;
    gap: 40px;
    padding: 0 10px;
    margin: 10px;
    @media screen and (max-width: 768px) {
      flex-direction: column;
      justify-content: flex-start;
      align-items: flex-start;
      gap: 0px;
    }
  }
  &-baseCurrency,
  &-outputCurrencies {
    display: flex;
    justify-content: flex-start;
    align-items: flex-start;
    gap: 10px;
    margin-top: 10px;
    margin-bottom: 10px;
    @media screen and (max-width: 768px) {
      flex-direction: column;
    }
    label {
      font-size: 1rem;
      font-weight: 700;
      color: map.get(variables.$white, 'pure');
      text-align: start;
      white-space: nowrap;
      width: max-content;
      @media screen and (max-width: 768px) {
        text-align: start;
      }
    }
    p {
      font-size: 1rem;
      font-weight: 300;
      color: map.get(variables.$white, 'pure');
      text-align: start;
      @media screen and (max-width: 768px) {
        text-align: start;
      }
    }
  }
  &-table {
    width: 100%;
    border-radius: 10px;
    background: map.get(variables.$blue, 'light');
    overflow: hidden;
    border-collapse: separate;
    thead {
      tr {
        th {
          padding: 0.5rem 1rem;
          text-align: start;
          background: map.get(variables.$blue, 'light');
          color: map.get(variables.$black, 'medium');
          border-radius: 0;
          white-space: nowrap;
          width: max-content;
        }
        th[scope='col'] {
          padding: 0.5rem;
          white-space: nowrap;
          max-width: min-content;
          text-align: end;
        }
      }
    }
    tbody {
      tr {
        &:hover {
          td,
          th[scope='row'] {
            background: map.get(variables.$blue, 'light');
          }
        }
        th[scope='row'] {
          padding: 0.5rem;
          text-align: end;
          font-weight: 600;
          background: map.get(variables.$white, 'off');
          white-space: nowrap;
          transition: all ease-out 300ms;
        }
        td {
          padding: 0.5rem 1rem;
          text-align: start;
          background: map.get(variables.$white, 'off');
          font-weight: 400;
          white-space: nowrap;
          width: max-content;
          transition: all ease-out 300ms;
        }
      }
    }
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
